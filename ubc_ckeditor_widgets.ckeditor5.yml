# If using yml to configure plugins, rename this to {module_name}.ckeditor5.yml.
# If using annotations, this file can be removed.
# @see https://www.drupal.org/docs/drupal-apis/plugin-api/annotations-based-plugins
#   For information on using annotations to define plugins.
# @see the CKEditor 5 module's README.md for more details regarding plugin
#   configuration options.

ubc_ckeditor_widgets_ubcaccordion:
  # Use the provider: property for this plugin to depend on another module.
  # Configuration that will be sent to CKEditor 5 JavaScript plugins.
  ckeditor5:
    plugins:
      - ubcAccordion.UbcAccordion
    # *Additional configuration properties*
    # config: data sent to the constructor of any CKEditor 5 plugin
    #   editorPluginName:
    #     editorPluginProperty: editorPluginValue
    config:
      accordion:
        contentToolbar: [ accordionUbc ]
  # Configuration that will be used directly by Drupal.
  drupal:
    label: UBC Accordion
    # The library loaded while using the editor.
    library: ubc_ckeditor_widgets/ubc_accordion
    # The library loaded when configuring the text format using this plugin.
    admin_library: ubc_ckeditor_widgets/ubc_accordion.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      UbcAccordion:
        label: UBC Accordion
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      # Note that it necessary for elements to separately provide both the tag
      # (f.e. `<h3>`) and the attribute being added to the tag
      # (f.e. `<h3 class="ubc-accordion-title">`).
      - <div>
      - <div class="clearfix widget-accordion accordion js-reveal__parent js-reveal__target accordion__content js-reveal__trigger accordion__trigger" hidden aria-expanded>
    # *Additional configuration properties*
    # conditions: for setting additional criteria that must be met for the
    #   plugin to be active.
    # class: Optional PHP class that makes it possible for the plugin to provide
    #   dynamic values, or a configuration UI.

ubc_ckeditor_widgets_ubcaccordiontoggle:
  ckeditor5:
    plugins:
      - ubcAccordionToggle.UbcAccordionToggle
  drupal:
    label: UBC Accordion Toggle
    # The library loaded while using the editor.
    library: ubc_ckeditor_widgets/ubc_accordion_toggle
    # The library loaded when configuring the text format using this plugin.
    admin_library: ubc_ckeditor_widgets/ubc_accordion_toggle.admin
    toolbar_items:
      # This should match the name of the corresponding plugin exported in the
      # plugin's index.js.
      UbcAccordionToggle:
        label: UBC Accordion Toggle
    # If the plugin does not provide elements, set this as
    # `elements: false`
    elements:
      - <button>
      - <button class="text-xs widget-expandcollapse unit-button" data-state>

ubc_ckeditor_widgets_ubctableclass:
  ckeditor5:
    plugins:
      #- table.TableProperties
      #- table.TableCellProperties
      - ubcTableClass.UbcTableClass
    config:
      table:
        #contentToolbar: [ tableProperties, tableCellProperties, tableUbc ]
        contentToolbar: [ tableUbc ]
  drupal:
    label: UBC Table Toolbar Items
    library: ubc_ckeditor_widgets/ubc_table
    elements:
      - <figure>
      - <figure class="responsive-figure-table" aria-live>
      - <table>
      - <table class="table--plain table--condensed table--striped table--hover">
    conditions:
      plugins: [ ckeditor5_table ]

ubc_ckeditor_widgets_ubctablecellclass:
  ckeditor5:
    plugins:
      - ubcTableCellClass.UbcTableCellClass
    config:
      table:
        contentToolbar: [ tableCellUbc ]
  drupal:
    label: UBC Table Cell Toolbar Items
    library: ubc_ckeditor_widgets/ubc_table_cell
    elements:
      - <th>
      - <th class="w-half w-one-third w-one-quarter w-one-fifth w-one-sixth">
      - <td>
      - <td class="w-half w-one-third w-one-quarter w-one-fifth w-one-sixth">
    conditions:
      plugins: [ ckeditor5_table ]
